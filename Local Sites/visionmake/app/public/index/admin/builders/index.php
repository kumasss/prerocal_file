<?php
 session_start(); require_once(dirname(__FILE__).'/../../common/config.ini'); require_once(dirname(__FILE__).'/../../common/users.php'); require_once(dirname(__FILE__).'/../../common/builders.php'); require_once(dirname(__FILE__).'/../../common/groups.php'); require_once(dirname(__FILE__).'/../../common/class_image.php'); $usersObj = new users(); $buildersObj = new builders(); $groupsObj = new groups(); if( $usersObj->get_auth_session( $_SESSION, $user )) { if( $usersObj->db_login( $user['email'], $user['password'], $auth=ADMIN_ROLL, $user )) { session_regenerate_id( TRUE ); } else { $usersObj->session_dell(); } } else { header( 'Location:'.URL.'/admin/' ); } if( $_SERVER['REQUEST_METHOD'] == 'POST' || $_SERVER['REQUEST_METHOD'] == 'GET' ) { $buildersObj->get_data($_REQUEST, $form_data); (!isset($form_data['status'])) ? $form_data['status'] = '':NULL; (!isset($form_data['position'])) ? $form_data['position'] = '':NULL; (!isset($form_data['title'])) ? $form_data['title'] = '':NULL; (!isset($form_data['put_result'])) ? $form_data['put_result'] = '':NULL; (!isset($form_data['put_result2'])) ? $form_data['put_result2'] = '':NULL; $form_data['group_id'] = $groupsObj->set_group_id($form_data); $data_all_arr = $buildersObj->count_content($form_data['group_id']); $data_all = $data_all_arr[0]['cnt']; $cur_page = isset( $form_data['page'] ) ? $form_data['page']:1; $result_per_page = (defined('RESULT_PER_PAGE')) ? RESULT_PER_PAGE : 30; $skip = ( $cur_page - 1 ) * $result_per_page; $num_pages = isset( $data_all ) ? ceil( $data_all / $result_per_page ):''; } switch ($form_data['status']) { case 'top': if( !$buildersObj->get_all_top( $tops_data )) { $err['top'] = "トップページが作成されていません。"; } else { $tops_data['contents'] = htmlspecialchars_decode($tops_data['contents']); $tops_data['contents'] = str_replace('<script', '&lt;script', $tops_data['contents']); $tops_data['contents'] = str_replace('</script', '&lt;/script', $tops_data['contents']); $tops_data['contents'] = str_replace('<?php', '&lt;?php', $tops_data['contents']); $tops_data['contents'] = nl2br($tops_data['contents']); } require_once( 'list_top.php' ); break; case 'content': (!isset($form_data['sort'])) ? $form_data['sort'] = '':NULL; (!isset($form_data['sortby'])) ? $form_data['sortby'] = '':NULL; (!isset($_SESSION['sort'])) ? $_SESSION['sort'] = '':NULL; $sort = $form_data['sort']; $sortby = $form_data['sortby']; if ($sortby=='DESC' || empty($sortby)){ $sortby="ASC"; } else { $sortby="DESC"; } $sort_url_title = URL.'/admin/builders/?status=content&sort=title&sortby='.$sortby; $sort_url_sidetitle = URL.'/admin/builders/?status=content&sort=sidetitle&sortby='.$sortby; $sort_url_date = URL.'/admin/builders/?status=content&sort=date&sortby='.$sortby; $sort_url_furl = URL.'/admin/builders/?status=content&sort=furl&sortby='.$sortby; $sort_url_curl = URL.'/admin/builders/?status=content&sort=curl&sortby='.$sortby; if( !$buildersObj->get_all_content( $contents_data, $form_data['group_id'], $sort, $sortby, $skip, $result_per_page )) { $err['content'] = "コンテンツページが作成されていません。"; } $groupsObj->get_all_group( $groups_data ); $groups_data = $groupsObj->add_group_all_section( $groups_data ); require_once( 'list_content.php' ); break; case 'sidebar': $buildersObj->get_all_sidebar( $sidebars_data ); $buildersObj->get_all_content( $contents_data ); $buildersObj->get_tp_side_titles( $side_titles_data ); $idss = ""; if ( $form_data['put_result'] != NULL ){ $ids = explode(",", $form_data['put_result']); foreach($ids as $k=>$v){ $ab=explode("+",$v); $a[]=$ab[0]; $b[]=$ab[1]; } sort($a); foreach($b as $akey1=>$avalue1){ $sidebars_data['position_m'] = $a[$akey1]; $sidebars_data['id'] = $avalue1; $buildersObj->db_edit_position_side_title( $sidebars_data ); $_SESSION['message'] = '並び順を保存しました。[01]'; } } $message = (isset($_SESSION['message'])) ? $_SESSION['message']:null; $_SESSION['message'] = null; $err = (isset($_SESSION['err'])) ? $_SESSION['err']:null; $_SESSION['err'] = null; $buildersObj->make_sidebars_data( $sidebars_data, $contents_data ); $buildersObj->get_all_sidebar( $sidebars_data ); $buildersObj->get_all_content( $contents_data ); if( empty( $sidebars_data ) && empty( $contents_data )) { $err['sidebars'] = "サイドバーが作成されていません。"; $err['contents'] = "コンテンツページが作成されていません。"; } if( !$buildersObj->get_all_side_freeareas( $side_freeareas_data )) { $err['freearea'] = "自由入力欄が作成されていません。再インストールをして下さい。"; } $groupsObj->get_all_group( $groups_data ); $buildersObj->get_all_setting( $tp_setting_data ); $buildersObj->get_tp_side_titles( $side_titles_data ); require_once( 'list_sidebar.php' ); break; case 'sidebar_title': $side_title_id = $form_data['side_title_id']; $buildersObj->get_all_sidebar( $sidebars_data ); $idss = ""; if ( $form_data['put_result'] != NULL ){ $ids = explode(",", $form_data['put_result']); foreach($ids as $k=>$v){ $ab=explode("+",$v); $a[]=$ab[0]; $b[]=$ab[1]; } sort($a); foreach($b as $akey1=>$avalue1){ $sidebars_data['position_c'] = $a[$akey1]; $sidebars_data['id'] = $avalue1; $buildersObj->db_edit_position_content( $sidebars_data ); $_SESSION['message'] = '並び順を保存しました。[02]'; } } $message = (isset($_SESSION['message'])) ? $_SESSION['message']:null; $_SESSION['message'] = null; $err = (isset($_SESSION['err'])) ? $_SESSION['err']:null; $_SESSION['err'] = null; $buildersObj->get_midasi_sidebar( $midasi_data, $form_data['side_title_id'] ); $groupsObj->get_all_group( $groups_data ); require_once( 'list_sidebar_title.php' ); break; case 'side_titles_add_done': $buildersObj->check_input_side_titles( $form_data ); $err = $buildersObj->get_err(); if( empty( $err )) { $form_data['public'] = 1; $form_data['toggle_flg'] = 1; $buildersObj->db_add_side_titles( $form_data ); $id = $buildersObj->get_last_id(); $sidebar['side_title_id'] = $id; $sidebar['contents_id'] = NULL; if( empty($form_data['position']) ) { $max = $buildersObj->get_max_position_sidebar(); $sidebar['position'] = $max+1; } else { $sidebar['position'] = $form_data['position']; } $buildersObj->db_add_sidebars( $sidebar ); } else { $groupsObj->get_all_group( $groups_data ); $buildersObj->get_all_sidebar( $sidebars_data ); $buildersObj->get_all_content( $contents_data ); if( empty( $sidebars_data ) && empty( $contents_data )) { $err['sidebars'] = "サイドバーが作成されていません。"; $err['contents'] = "コンテンツページが作成されていません。"; } if( !$buildersObj->get_all_side_freeareas( $side_freeareas_data )) { $err['freearea'] = "自由入力欄が作成されていません。"; } require_once( 'list_sidebar.php' ); break; } header( 'Location:'.URL.'/admin/builders/?status=sidebar' ); break; case 'side_title_edit': if ($form_data['side_titles_title']==''){ $form_data['title'] = 'no caption'; } else{ $form_data['title'] = $form_data['side_titles_title']; } $buildersObj->check_input_side_titles_title( $form_data ); $err = $buildersObj->get_err(); if(empty( $err )) { $form_data['id'] = $form_data['side_title_id']; $buildersObj->db_edit_side_title( $form_data ); $message = '見出しを保存しました。'; } $buildersObj->get_midasi_sidebar( $midasi_data, $form_data['side_title_id'] ); $groupsObj->get_all_group( $groups_data ); require_once( 'list_sidebar_title.php' ); break; case 'side_freeareas_edit': if($_SERVER["REQUEST_METHOD"] == "POST") { $buildersObj->check_input_side_freeareas( $form_data ); $err = $buildersObj->get_err(); if( empty( $err )) { $is = $buildersObj->db_check_side_freeareas( $form_data['id'] ); if($is == 0){ $buildersObj->db_add_side_freeareas( $form_data ); }else{ $buildersObj->db_edit_side_freeareas( $form_data ); } if($form_data['id'] == 1 || $form_data['id'] == 2 || $form_data['id'] == 5) { $_SESSION['message'] = 'フリーエリアを更新しました。'; } else{ $_SESSION['message'] = '見出しを更新しました。'; } }else{ $_SESSION['err'] = $err; } } header( 'Location:'.URL.'/admin/builders/?status=sidebar' ); break; case 'side_freeareas_delete': if($_SERVER["REQUEST_METHOD"] == "POST") { $form_data['contents'] = ''; $buildersObj->db_edit_side_freeareas( $form_data ); } header( 'Location:'.URL.'/admin/builders/?status=sidebar' ); break; case 'side_position_edit': if($_SERVER["REQUEST_METHOD"] == "POST") { if( isset( $form_data['position'] )) { if( !isset( $form_data['side_title_id'] )) { $form_data['side_title_id'] = NULL; } elseif( !isset( $form_data['contents_id'] )) { $form_data['contents_id'] = NULL; } $buildersObj->db_edit_sidebars( $form_data ); } else { } } header( 'Location:'.URL.'/admin/builders/?status=sidebar' ); break; case 'sidebars_delete': if($_SERVER["REQUEST_METHOD"] == "POST") { $buildersObj->db_delete_side_titles( $form_data['id'] ); $_SESSION['message'] = '見出しを削除しました。'; } header( 'Location:'.URL.'/admin/builders/?status=sidebar' ); break; case 'sidebar_disp': if(!$buildersObj->is_ajax())return; $field = $form_data['flg_id']; $field = 'disp_'.$field; if($form_data['flg_ch']=='true') { $flg=1; }else{ $flg=0; } if($buildersObj->db_set_disp_flg( $field, $flg )){ echo $field.','.$flg; } break; case 'upload': if( !$buildersObj->get_all_img_uploaders( $img_uploaders_data )) { $err['upload'] = "画像がアップロードされていません。"; } require_once( 'list_upload.php' ); break; case 'upload_done': $upload_key = 'images'; $img_path1 = 'images'; $img_path2 = date( "Ymd", time() ); $img_path = '../../'.$img_path1.'/'.$img_path2; if( !is_dir( $img_path )) { if( @mkdir( $img_path )) { } else { $err['upload'] = 'ディレクトリの作成に失敗しました。'; } } $result = $buildersObj->upload( $data, $upload_key, $img_path ); if( $result === TRUE) { $data['title'] = pathinfo( $data['org_file'], PATHINFO_FILENAME ); $data['store_folder'] = $img_path1.'/'.$img_path2; $data['thumbnail'] = 'thum-'.$data['store_file']; $buildersObj->db_add_img_uploaders( $data ); $data['store_folder'] = '../../'.$data['store_folder']; $buildersObj->make_thumbnail( $data ); } else { $err['upload'] = $result; $buildersObj->get_all_img_uploaders( $img_uploaders_data ); require_once( 'list_upload.php' ); break; } header( 'Location:'.URL.'/admin/builders/?status=upload' ); break; case 'upload_delete': if($_SERVER["REQUEST_METHOD"] == "POST") { $buildersObj->get_img_uploaders( $form_data['id'], $data ); $data['store_folder'] = '../../'.$data['store_folder']; $buildersObj->del_img_file( $data ); $buildersObj->db_delete_img_uploaders( $form_data['id'] ); } header( 'Location:'.URL.'/admin/builders/?status=upload' ); break; case 'template': $template_url = "https://cyfons.net/inc/template.php"; $html = @file_get_contents($template_url); if (isset($form_data['template_file'])) { $down_url = "https://miyako:03ng85zk@cyfons.net/template/"; $file_name = $form_data['template_file']; $tmp = @file_get_contents( $down_url.$file_name ); if ( $tmp === false ){ $down_status = -1; }else{ $fp = @fopen(dirname(__FILE__).'/../../tmp/'.$file_name, 'w'); @fwrite($fp, $tmp); @fclose($fp); $str = exec( 'unzip -o -d ' . dirname(__FILE__).'/../../template/ ' . dirname(__FILE__).'/../../tmp/'.$file_name ); $down_status = 1; } } require_once( 'template.php' ); break; case 'toggle_done': if( $form_data['toggle_flg'] == 1 ){ $form_data['toggle_flg'] = 0; }else{ $form_data['toggle_flg'] = 1; } $buildersObj->db_edit_toggle_side_title( $form_data ); $_SESSION['message'] = '見出しの折りたたみを変更しました。'; header( 'Location:'.URL.'/admin/builders/?status=sidebar' ); break; default: if( !$buildersObj->get_all_top( $tops_data )) { $err['top'] = "トップページが作成されていません。"; } $form_data['status'] = 'default'; require_once( 'top.php' ); break; } ?>