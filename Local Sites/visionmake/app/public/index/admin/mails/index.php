<?php
 session_start(); require_once(dirname(__FILE__).'/../../common/config.ini'); require_once(dirname(__FILE__).'/../../common/users.php'); require_once(dirname(__FILE__).'/../../common/mails.php'); require_once(dirname(__FILE__).'/../../common/logs.php'); require_once(dirname(__FILE__).'/../../common/groups.php'); require_once(dirname(__FILE__).'/../../common/settings.php'); $usersObj = new users(); $mailsObj = new mails(); $logsObj = new logs(); $groupsObj = new groups(); if( $usersObj->get_auth_session( $_SESSION, $user )) { if( $usersObj->db_login( $user['email'], $user['password'], $auth=ADMIN_ROLL, $user )) { session_regenerate_id( TRUE ); } else { $usersObj->session_dell(); } } else { header( 'Location:'.URL.'/admin/' ); } if( $_SERVER['REQUEST_METHOD'] == 'POST' || $_SERVER['REQUEST_METHOD'] == 'GET' ) { $mailsObj->get_data($_REQUEST, $form_data); (!isset($form_data['status'])) ? $form_data['status'] = '':NULL; $form_data['group_id'] = $groupsObj->set_group_id($form_data); if ($form_data['status'] == 'step') { $data_all_arr = $mailsObj->count_step($form_data['group_id']); $data_all = $data_all_arr[0]['cnt']; $cur_page = isset( $form_data['page'] ) ? $form_data['page']:1; $result_per_page = (defined('RESULT_PER_PAGE')) ? RESULT_PER_PAGE : 30; $skip = ( $cur_page - 1 ) * $result_per_page; $num_pages = isset( $data_all ) ? ceil( $data_all / $result_per_page ):''; } else if ($form_data['status'] == 'extra') { $data_all_arr = $mailsObj->count_extra($form_data['group_id']); $data_all = $data_all_arr[0]['cnt']; $cur_page = isset( $form_data['page'] ) ? $form_data['page']:1; $result_per_page = (defined('RESULT_PER_PAGE')) ? RESULT_PER_PAGE : 30; $skip = ( $cur_page - 1 ) * $result_per_page; $num_pages = isset( $data_all ) ? ceil( $data_all / $result_per_page ):''; } } switch ($form_data['status']) { case 'step': if( !$mailsObj->get_all_stepmail($step_mails_data, $form_data['group_id'], $skip, $result_per_page) ) { $message = "ステップメールが登録されていません。"; } $settingsObj = new settings(); $groupsObj->get_all_group( $groups_data ); $groups_data = $groupsObj->add_group_all_section( $groups_data ); $send_stepmail = $settingsObj->get_send_stepmail(); $send_now = $settingsObj->get_send_now(); require_once( 'list_step.php' ); break; case 'prev_step': $err = ''; if( !$mailsObj->get_step_fullmail( $mails_data, $form_data['id'] )) { $err = "ステップメールが登録されていません。"; } $mails_data = $mails_data[0]; require_once( 'prev_mail.php' ); break; case 'extra': $no_mail = FALSE; if( !$mailsObj->get_all_extra_mail($extra_mails_data, $form_data['group_id'], $skip, $result_per_page)) { $message = "号外メールが登録されていません。"; $no_mail = TRUE; } if( !$no_mail ) { $result = $mailsObj->check_send_done( $extra_mails_data ); if($result)$mailsObj->get_all_extra_mail($extra_mails_data, $form_data['group_id'], $skip, $result_per_page); } $settingsObj = new settings(); $groupsObj->get_all_group( $groups_data ); $groups_data = $groupsObj->add_group_all_section( $groups_data ); $send_extramail = $settingsObj->get_send_extramail(); require_once( 'list_extra.php' ); break; case 'prev_extra': $err = ''; if( !$mailsObj->get_extra_fullmail( $mails_data, $form_data['id'] )) { $err = "号外メールが登録されていません。"; } require_once( 'prev_mail.php' ); break; case 'csv': $cnt = $mailsObj->count_step_mail(); if( $cnt > 0 ) { } else { $err['step'] = "ステップメールが登録されていません。"; } $result = ''; $restore_flg = ''; $form_data['options0'] = (isset($form_data['options0'])) ? $form_data['options0'] : 1; $form_data['options1'] = (isset($form_data['options1'])) ? $form_data['options1'] : 0; $is_step_mails_bak = $mailsObj->is_data_step_mails_bak(); $is_stories_bak = $mailsObj->is_data_stories_bak(); require_once( 'csv.php' ); break; case 'step_csv': if( $_SERVER['REQUEST_METHOD'] == 'POST' ) { if( $usersObj->db_is_admin( $user['id'] )) { $cnt = $mailsObj->count_step_mail(); if( $cnt > 0 ) { $mailsObj->get_all_stepmail( $data ); $mailsObj->get_step_export( $data ); } else { $err['step'] = "ステップメールが登録されていません。"; $result = ''; $form_data['options0'] = (isset($form_data['options0'])) ? $form_data['options0'] : 1; $form_data['options1'] = (isset($form_data['options1'])) ? $form_data['options1'] : 0; require_once( 'csv.php' ); break; } } } break; case 'step_csv_upload': $result = ''; $restore_flg = ''; if( $_SERVER['REQUEST_METHOD'] == 'POST' ) { if( $usersObj->db_is_admin( $user['id'] )) { $upload_key = 'csv'; $csv_path = '../../tmp'; $result = $usersObj->csvImport( $data, $upload_key, $csv_path ); if( $result === TRUE) { $up_file = $data['store_file']; $filename = $csv_path.'/'.$up_file; $result = $mailsObj->update_step_data( $filename, $form_data ); $usersObj->unlinkRecursive( $csv_path, FALSE); } else { $err['upload'] = $result; } } } $form_data['options0'] = (isset($form_data['options0'])) ? $form_data['options0'] : 0; $form_data['options1'] = (isset($form_data['options1'])) ? $form_data['options1'] : 0; $is_step_mails_bak = $mailsObj->is_data_step_mails_bak(); $is_stories_bak = $mailsObj->is_data_stories_bak(); require_once( 'csv.php' ); break; case 'step_restore_data': $restore_flg = false; $is_step_mails_bak = $mailsObj->is_data_step_mails_bak(); $is_stories_bak = $mailsObj->is_data_stories_bak(); if ($is_step_mails_bak & $is_stories_bak) { $mailsObj->restore_data_stepmail(); $mailsObj->restore_data_stories(); $restore_flg = true; } else { $err['restore'] = "復元に失敗しました。バックアップデータが存在しない可能性があります。"; } $result = ''; $form_data['options0'] = (isset($form_data['options0'])) ? $form_data['options0'] : 1; $form_data['options1'] = (isset($form_data['options1'])) ? $form_data['options1'] : 0; require_once( 'csv.php' ); break; case 'send_stepmail': if(!$mailsObj->is_ajax())return; $settingsObj = new settings(); $send_stepmail = $settingsObj->get_send_stepmail(); if($send_stepmail==""){ echo 99; break; } if(empty($form_data['send_stepmail'])){ $settingsObj->is_send_stepmail(0); break; } if($form_data['send_stepmail']==1){ $settingsObj->is_send_stepmail(1); echo 1; } break; case 'send_extramail': if(!$mailsObj->is_ajax())return; $settingsObj = new settings(); $send_extramail = $settingsObj->get_send_extramail(); if($send_extramail==""){ echo 99; break; } if(empty($form_data['send_extramail'])){ $settingsObj->is_send_extramail(0); break; } if($form_data['send_extramail']==1){ $settingsObj->is_send_extramail(1); echo 1; } break; case 'send_now': if(!$mailsObj->is_ajax())return; $settingsObj = new settings(); $send_now = $settingsObj->get_send_now(); if($send_now==""){ echo 99; break; } if(empty($form_data['send_now'])){ $settingsObj->is_send_now(0); break; } if($form_data['send_now']==1){ $settingsObj->is_send_now(1); echo 1; } break; case 'backnumber': $cnt = 1; if( $cnt > 0 ) { } else { $err['step'] = "ステップメールが登録されていません。"; } $result = ''; require_once( 'backnumber.php' ); break; case 'mailer': require_once(dirname(__FILE__).'/../../common/mailers.php'); $mailersObj = new mailers(); $data = $mailersObj->get_mailer(); if (empty($data)) { $mailersObj->create_mailer(); $mailersObj->db_all_delete_mailer(); $mailersObj->db_set_mailer(); $data = $mailersObj->get_mailer(); } $form_data = $data; $form_data['status'] = 'mailer'; require_once( 'mailer.php' ); break; case 'edit_mailer': require_once(dirname(__FILE__).'/../../common/mailers.php'); $mailersObj = new mailers(); $check_smtp = $mailersObj->check_input_smtp( $form_data ); $err = $mailersObj->get_err(); if (empty($err)) { $mailersObj->db_edit_mailer( $form_data ); $message = '保存しました。'; if ($check_smtp) $message.= '確認メールを送信しました。'; } else { if (!empty($err['smtp'])) { $e_meaasage = 'サーバー設定を見直して下さい。'; } else { $e_meaasage = '保存できませんでした。'; } } require_once( 'mailer.php'); break; default: $form_data['status'] = 'default'; require_once( 'top.php' ); break; } ?>