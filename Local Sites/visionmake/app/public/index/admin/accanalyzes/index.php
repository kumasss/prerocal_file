<?php
 session_start(); require_once( '../../common/config.ini' ); require_once( '../../common/users.php' ); require_once( '../../common/accanalyzes.php' ); $usersObj = new users(); $accanalyzesObj = new accanalyzes(); if( $_SERVER['REQUEST_METHOD'] == 'POST' || $_SERVER['REQUEST_METHOD'] == 'GET' ) { $accanalyzesObj->get_data($_REQUEST, $form_data); (!isset($form_data['status'])) ? $form_data['status'] = '':NULL; $form_data['status'] = (!isset($form_data['mode'])) ? '':$form_data['mode']; (!isset($form_data['date'])) ? $form_data['date'] = '':NULL; (!isset($form_data['time'])) ? $form_data['time'] = '':NULL; } switch ($form_data['status']) { case 'site': $accanalyzesObj->check_date( $form_data['date'] ); $accanalyzesObj->check_time( $form_data['time'] ); $err = $accanalyzesObj->get_err(); if( !empty( $err )) { $logs[] = array( 'header' => array( 'result'=>'err', 'cause'=>'引数が不正です。' ) ); header('Content-Type: application/json'); echo json_encode( $logs ); exit; } $accanalyzesObj->get_ac_site_logs( $form_data, $site_logs ); $size = count( $site_logs ); if(empty($site_logs)){ $logs[] = array( 'header' => array( 'result'=>'ok', 'size'=>$size ) ); } else{ $logs[] = array( 'header' => array( 'result'=>'ok', 'size'=>$size )); foreach( $site_logs as $log ) { $logs[] = array( 'data' => array( 'shortcode' => $log['short_code'], 'datetime' => $log['hour'], 'traffic' => $log['cnt'], ), ); } } header('Content-Type: application/json'); echo json_encode( $logs ); exit; break; case 'mail': $accanalyzesObj->check_date( $form_data['date'] ); $accanalyzesObj->check_time( $form_data['time'] ); $err = $accanalyzesObj->get_err(); if( !empty( $err )) { $logs[] = array( 'header' => array( 'result'=>'err', 'cause'=>'引数が不正です。' ) ); header('Content-Type: application/json'); echo json_encode( $logs ); exit; } $accanalyzesObj->get_ac_mail_logs( $form_data, $mail_logs ); $size = count( $mail_logs ); if(empty($mail_logs)){ $logs[] = array( 'header' => array( 'result'=>'ok', 'size'=>$size ) ); } else{ $logs[] = array( 'header' => array( 'result'=>'ok', 'size'=>$size )); foreach( $mail_logs as $log ) { $logs[] = array( 'data' => array( 'shortcode' => $log['short_code'], 'datetime' => $log['hour'], 'traffic' => $log['cnt'], 'mail_mode' => $log['mail_mode'], 'mail_id' => $log['mail_id'], ) ); } } header('Content-Type: application/json'); echo json_encode( $logs ); exit; break; case 'edit': break; case 'delete': break; default: $logs[] = array( 'header' => array( 'result'=>'err', 'cause'=>'引数が不正です。' ) ); header('Content-Type: application/json'); echo json_encode( $logs ); exit; break; } ?>