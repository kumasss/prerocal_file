<?php
 define('FNAME_ORG_INI','../common/config_org.ini'); define('FNAME_INI','../common/config.ini'); define('FNAME_ORG_PHP_INI','../common/php_org.ini'); define('FNAME_PHP_INI_V','../common/js/tiny_mce/plugins/quickuploadvideo/php.ini'); define('FNAME_PHP_INI_F','../common/js/tiny_mce/plugins/quickuploadfile/php.ini'); define('FNAME_PHP_INI_A','../common/js/tiny_mce/plugins/quickuploadaudio/php.ini'); require_once(dirname(__FILE__).'/../common/users.php'); $Obj = new users(); $version = $Obj->get_version(); function get_data( $data, &$aryData ){ $aryData = array(); foreach($data as $key=>$value) { $$key = isset($value) ? htmlspecialchars($value, ENT_QUOTES) : NULL ; $reqData[$key] = $$key; $aryData = $reqData; } } function is_ajax() { return isset($_SERVER['HTTP_X_REQUESTED_WITH'])&&strtolower($_SERVER['HTTP_X_REQUESTED_WITH'])=='xmlhttprequest'; } get_data($_REQUEST, $form_data); $now_ver = (!empty($form_data['now_ver'])) ? $form_data['now_ver'] : NULL; if( is_ajax() ) { }else{ echo <<< EOD
<!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
</head>
<body>
<h1>Cyfonsシステムアップデート(更新ファイルのアップデート完了)</h1>
<div style="border:1px solid #dd5555;padding:7px;margin:0 20px 20px;">
<p>更新ファイルをアップデートしました。<br>
<span style="color:#dd0000;font-weight:bold;">もう一度システムアップデート画面に戻ります</span>が正常な動作ですので「次に進む」をクリックしてアップデートを勧めて下さい。</p>
<form method="post" action="./update_start.php">
<input type="hidden" name="status" value="">
<input type="hidden" name="now_ver" value={$now_ver}>
<input type="submit" value="次に進む">
</form>
</div>
</body>
</html>
EOD;
die(); } if ( $now_ver == '' ) { echo <<< EOD
<div class="panel panel-danger">
<div class="panel-heading">呼び出し方法が不正です。</div>
<div class="panel-body">「update.php?now_ver=使っていたバージョン」で開いてください。</div>
</div>
EOD;
return; } echo '<h2 id="done_mess">アップデート処理中・・・</h2>'; if ( $now_ver < '0.27' ) { echo "<p>0.26 → 0.27の変更処理<br>"; $sql = "ALTER TABLE `settings` ADD `form_is_password` INT NOT NULL DEFAULT '1' AFTER `form_order_no`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_is_password`</p>"; } if ( $now_ver < '0.28' ) { echo "<p>0.27 → 0.28の変更処理<br>"; $sql = "ALTER TABLE `tp_contents` ADD `password` VARCHAR(64) NULL DEFAULT NULL AFTER `public`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_is_password`<br>"; $sql = "ALTER TABLE `settings` ADD `automail_edit_admin` INT NULL DEFAULT '0' AFTER `automail_stop_admin`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.automail_edit_admin`<br>"; $sql = "ALTER TABLE `settings` ADD `automail_edit_user` INT NULL DEFAULT '0' AFTER `automail_stop_user`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.automail_edit_user`</p>"; } if ( $now_ver < '1.03' ) { echo "<p>0.28 → 1.03の変更処理<br>"; $sql = "ALTER TABLE `tp_contents` ADD `eye_image_id` int(11) DEFAULT NULL AFTER `contents`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `tp_contents.eye_image_id`<br>"; $sql = "ALTER TABLE `tp_contents` ADD INDEX (`eye_image_id`)"; $Obj->db_sql( $sql ); echo "カラムにインデックスを追加しました。 `tp_contents.eye_image_id`<br>"; $sql = "ALTER TABLE `tp_inquirys` ADD `info` TEXT NOT NULL AFTER `contents` "; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `tp_inquirys.info`<br>"; $sql = "ALTER TABLE `settings` ADD `form_add_done_message` TEXT NOT NULL AFTER `form_is_password`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_add_done_message`<br>"; $sql = "ALTER TABLE `settings` ADD `form_stop_done_message` TEXT NOT NULL AFTER `form_add_done_message`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_stop_done_message`<br>"; $sql = "UPDATE `settings` SET `id`='1', `form_add_done_message`='&lt;p&gt;会員登録が完了しました。&lt;br&gt;\r\nこの度はお申し込みをありがとうございました。&lt;/p&gt;\r\n&lt;p&gt;今後退会される時は、配信されるメール内の配信解除用リンクをクリックするか&lt;br&gt;\r\n解除フォームからメールアドレスを送信すると退会することができます。&lt;/p&gt;\r\n', `form_stop_done_message`='&lt;p&gt;会員の解除が完了しました。&lt;br&gt;\r\nこれまでのお付き合いをありがとうございました。&lt;/p&gt;\r\n' WHERE `id`='1'"; $Obj->db_sql( $sql ); echo "テーブルにデータを設定しました。 `settings`<br>"; $sql = "ALTER TABLE `users` CHANGE `data1` `story_no` INT( 11 ) NULL DEFAULT '0'"; $Obj->db_sql( $sql ); echo "テーブルのカラムを変更しました。 `users.story_no`</p>"; } if ( $now_ver < '1.1' ) { echo "<p>1.03 → 1.10の変更処理<br>"; $sql = "ALTER TABLE `users` CHANGE `story_no` `story_no` INT( 11 ) NULL DEFAULT '0'"; $Obj->db_sql( $sql ); echo "テーブルのカラムを変更しました。 `users.story_no`<br>"; $sql = "ALTER TABLE `settings` ADD `form_email` INT NULL DEFAULT 1 AFTER `automail_edit_user`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_email`<br>"; $sql = "ALTER TABLE `settings` ADD `form_firstname` INT NULL DEFAULT 1 AFTER `form_email`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_firstname`<br>"; $sql = "ALTER TABLE `settings` ADD `form_lastname` INT NULL DEFAULT 1 AFTER `form_firstname`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_lastname`<br>"; $sql = "ALTER TABLE `settings` ADD `form_is_email` INT NULL DEFAULT 1 AFTER `form_order_no`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_is_email`<br>"; $sql = "ALTER TABLE `settings` ADD `form_is_firstname` INT NULL DEFAULT 1 AFTER `form_is_email`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_is_firstname`<br>"; $sql = "ALTER TABLE `settings` ADD `form_is_lastname` INT NULL DEFAULT 1 AFTER `form_is_firstname`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_is_lastname`<br>"; $sql = "ALTER TABLE `settings` ADD `form_is_order_no` INT NULL DEFAULT 0 AFTER `form_is_lastname`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings.form_is_order_no`<br>"; $sql = "ALTER TABLE `tp_contents`  ADD `no_public_date` INT NULL AFTER `public_date`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `tp_contents.no_public_date`</p>"; } if ( $now_ver < '1.25' ) { echo "<p>1.20 → 1.25の変更処理<br>"; $sql = "ALTER TABLE `settings` ADD `send_now` INT NULL DEFAULT '0' AFTER `send_interval`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings`<br>"; $str=@file_get_contents(FNAME_INI); $str=rtrim($str, "?>"); $is_str = strpos($str, 'MAX_USER'); if ($is_str === false) { $str.="define( 'MAX_USER', 5000 );\r\n"; file_put_contents(FNAME_INI,$str); echo "設定ファイルを変更しました。</p>"; } } if ( $now_ver < '1.3' ) { echo "<p>1.25 → 1.3の変更処理<br>"; $sql = "ALTER TABLE `settings` ADD `form_password2` INT NULL DEFAULT '1' AFTER `form_email`,ADD `form_is_password2` INT NOT NULL DEFAULT '1' AFTER `form_is_password`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `settings`<br>"; $sql = "UPDATE `settings` SET `form_password2` = '1',`form_is_password2` = '1' WHERE `settings`.`id` =1 LIMIT 1 ;"; $Obj->db_sql( $sql ); echo "テーブルのデータを更新しました。 `settings`<br>"; $sql = "ALTER TABLE `users` ADD `ip` VARCHAR(100) NULL DEFAULT NULL AFTER `send_date`,ADD `host` VARCHAR(100) NULL DEFAULT NULL AFTER `ip`,ADD `group_id` INT NULL DEFAULT NULL AFTER `scenario_id`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `users`<br>"; $sql = "ALTER TABLE `step_mails` ADD `group_id` VARCHAR( 1000 ) NOT NULL AFTER `send_flg`"; $Obj->db_sql( $sql ); echo "テーブルを追加しました。 `step_mails`<br>"; $sql = "ALTER TABLE `tp_contents` ADD `group_id` VARCHAR( 1000 ) NOT NULL AFTER `password`"; $Obj->db_sql( $sql ); echo "テーブルを追加しました。 `tp_contents`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `groups` (`id` int(11) NOT NULL AUTO_INCREMENT,`group_name` varchar(100) NOT NULL,`created` datetime NOT NULL,`modified` datetime NOT NULL,PRIMARY KEY (`id`)) ENGINE=MyISAM  DEFAULT CHARSET=utf8"; $Obj->db_sql( $sql ); echo "テーブルを追加しました。 `groups`<br>"; $sql = "INSERT INTO `groups` (`id`, `group_name`, `created`, `modified`) VALUES (1, '共通', NOW(), '')"; $Obj->db_sql( $sql ); echo "テーブルにデータを追加しました。 `groups`<br>"; $sql = "ALTER TABLE `tp_settings` ADD `is_edit` SMALLINT( 2 ) NOT NULL DEFAULT '1' AFTER `contents_template`"; $Obj->db_sql( $sql ); echo "テーブルにデータを追加しました。 `tp_settings`</p>"; $sql = "SELECT count(*) as cnt  FROM `tp_img_uploaders` WHERE `title` = 'target'"; $Obj->db_sql( $sql ); $result = $Obj->get_sql(); if($result['cnt'] <= 0){ $sql = "INSERT INTO `tp_img_uploaders` (`id`, `title`, `org_file`, `store_file`, `store_folder`, `thumbnail`, `created`, `modified`) VALUES
    (NULL, 'target', 'target.png', '1400787830898288.png', 'images/default', 'thum-1400787830898288.png', NOW(), NULL),
    (NULL, 'prize_winner', 'prize_winner.png', '1400787824853391.png', 'images/default', 'thum-1400787824853391.png', NOW(), NULL),
    (NULL, 'light_bulb', 'light_bulb.png', '1400787817763463.png', 'images/default', 'thum-1400787817763463.png', NOW(), NULL),
    (NULL, 'clip', 'clip.png', '1400787811725922.png', 'images/default', 'thum-1400787811725922.png', NOW(), NULL),
    (NULL, 'warning', 'warning.png', '1400787799169904.png', 'images/default', 'thum-1400787799169904.png', NOW(), NULL),
    (NULL, 'search', 'search.png', '1400787794060809.png', 'images/default', 'thum-1400787794060809.png', NOW(), NULL),
    (NULL, 'note_accept', 'note_accept.png', '1400787787459790.png', 'images/default', 'thum-1400787787459790.png', NOW(), NULL),
    (NULL, 'edit', 'edit.png', '1400787781539281.png', 'images/default', 'thum-1400787781539281.png', NOW(), NULL),
    (NULL, 'chalk_board', 'chalk_board.png', '1400787776251915.png', 'images/default', 'thum-1400787776251915.png', NOW(), NULL),
    (NULL, 'tools', 'tools.png', '1400787837137831.png', 'images/default', 'thum-1400787837137831.png', NOW(), NULL)"; $Obj->db_sql( $sql ); echo "<p>標準アイキャッチを設定しました。 `tp_img_uploaders`</p>"; } } if( $now_ver < '2.10' ){ echo "<p>1.30 → 2.10の変更処理<br>"; $str=@file_get_contents(FNAME_INI); $str=rtrim($str, "?>"); $is_str = strpos($str, 'URL_MANUAL'); if($is_str === false){ $str.="define( 'URL_MANUAL', 'http://www.nssys.net/member/k000s.php' );\r\n"; file_put_contents(FNAME_INI,$str); echo "設定ファイルを変更しました。<br>"; } $is_str = strpos($str, 'FNAME_FORM_IFRAME'); if($is_str === false){ $str.="define('FNAME_FORM_IFRAME','form_iframe.php');\r\n"; file_put_contents(FNAME_INI,$str); echo "設定ファイルを変更しました。<br>"; } $is_str = strpos($str, 'URLIF'); if($is_str === false){ $str.="define( 'URLIF',  URLADD . '?mode=if' );\r\n"; file_put_contents(FNAME_INI,$str); echo "設定ファイルを変更しました。<br>"; } $is_str = strpos($str, 'URLEDIT'); if($is_str === false){ $str.="define( 'URLEDIT',  URL . '/member.php?page=member&mode=noside' );\r\n"; file_put_contents(FNAME_INI,$str); echo "設定ファイルを変更しました。<br>"; } $is_str = strpos($str, 'HEADER'); if($is_str === false){ $str.="define( 'HEADER', 'header' );\r\n"; file_put_contents(FNAME_INI,$str); echo "設定ファイルを変更しました。<br>"; } $sql = "ALTER TABLE `settings` ADD `form_email2` INT NULL DEFAULT '1' AFTER `form_email`"; $Obj->db_sql( $sql ); echo "テーブルにデータを追加しました。 `settings`<br>"; $sql = "ALTER TABLE `tp_img_uploaders` ADD `position` VARCHAR( 32 ) NOT NULL AFTER `thumbnail`"; $Obj->db_sql( $sql ); echo "テーブルにデータを追加しました。 `tp_img_uploaders`</p>"; } if($now_ver < '2.20' ){ echo "<p>2.10 → 2.20の変更処理<br>"; $sql = "CREATE TABLE IF NOT EXISTS `su_short_url` (`id` int(11) NOT NULL AUTO_INCREMENT,`short_code` varchar(12) NOT NULL,`short_url` varchar(2000) NOT NULL,`long_url` varchar(2000) NOT NULL,`title` varchar(200) NOT NULL,`group_code` int(11) NOT NULL,`created` datetime NOT NULL,`end_url` varchar(2000) DEFAULT NULL,`end_date` datetime DEFAULT NULL,PRIMARY KEY (`id`),UNIQUE KEY `short_code` (`short_code`)) ENGINE=InnoDB  DEFAULT CHARSET=utf8;"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `su_short_url`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `su_click_log` (`id` int(11) NOT NULL AUTO_INCREMENT,`short_code` varchar(12) CHARACTER SET utf8 NOT NULL,`short_url` varchar(2000) CHARACTER SET utf8 NOT NULL,`referrer` varchar(2000) CHARACTER SET utf8 DEFAULT NULL,`user_agent` varchar(255) CHARACTER SET utf8 DEFAULT NULL,`ip_address` varchar(41) CHARACTER SET utf8 DEFAULT NULL,`datetime` datetime NOT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `su_click_log`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `su_api_access_log` (`mode` varchar(20) NOT NULL,`shortcode` varchar(12) NOT NULL,`traffic` int(11) DEFAULT '0',`mail_mode` varchar(20) DEFAULT NULL,`mail_id` int(11) DEFAULT '0',`datetime` datetime NOT NULL,KEY `shortcode` (`shortcode`),KEY `datetime` (`datetime`),KEY `mode` (`mode`)) ENGINE=InnoDB DEFAULT CHARSET=utf8"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `su_api_access_log`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `su_api_sync` (`id` int(11) NOT NULL,`last_update` datetime NOT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `su_api_sync`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `su_category` (`id` int(11) NOT NULL AUTO_INCREMENT,`row` int(11) NOT NULL DEFAULT '0',`name` varchar(10) NOT NULL,`description` varchar(50) DEFAULT NULL,`created` datetime NOT NULL,`updated` datetime DEFAULT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2;"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `su_category`<br>"; $sql = "INSERT INTO `su_category` (`id`,`row`,`name`,`description`,`created`,`updated`) VALUES (1,0,'カテゴリなし',NULL,'0000-00-00 00:00:00',NULL);"; $Obj->db_sql( $sql ); echo "テーブルにデータを設定しました。 `su_category`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `ac_site_logs` (`id` int(11) NOT NULL AUTO_INCREMENT,`short_code` varchar(12) NOT NULL,`short_url` varchar(200) NOT NULL,`site_url` varchar(200) NOT NULL,`referer` varchar(200) DEFAULT NULL,`user_agent` varchar(255) DEFAULT NULL,`ip_address` varchar(41) DEFAULT NULL,`host` varchar(200) DEFAULT NULL,`created` datetime NOT NULL,PRIMARY KEY (`id`)) ENGINE=MyISAM  DEFAULT CHARSET=utf8"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `ac_site_logs`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `ac_mail_logs` (`id` int(11) NOT NULL AUTO_INCREMENT,`short_code` varchar(12) NOT NULL,`short_url` varchar(200) NOT NULL,`mail_id` int(11) NOT NULL,`mail_mode` varchar(200) NOT NULL,`user_id` int(11) NOT NULL,`created` datetime NOT NULL,PRIMARY KEY (`id`)) ENGINE=MyISAM  DEFAULT CHARSET=utf8"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `ac_mail_logs`</p>"; $htaccess=@file_get_contents('../.htaccess'); $is_str = strpos($htaccess, '# BEGIN Cyfons'); if($is_str === false || $htaccess === false){ (!empty($htaccess))?$str="\n":$str=''; $str.="# BEGIN Cyfons\n"; $str.='RewriteEngine on'; $str.="\n"; $str.='RewriteRule cf/(.*) '.URL.'/su_cf.php?code=$1 [R,L]'; $str.="\n"; $str.="SetEnv TZ JST-9"; $str.="\n"; $str.="# END Cyfons\n"; file_put_contents('../.htaccess', $str, FILE_APPEND); echo "<p>設定ファイルを変更しました。</p>"; } $str=@file_get_contents(FNAME_INI); $str=rtrim($str, "?>"); $is_str = strpos($str, 'SESSION_GROUP_ID'); if ($is_str === false){ $str.="define( 'SESSION_GROUP_ID', 'SEGROUPID' );\r\n"; file_put_contents(FNAME_INI,$str); echo "<p>設定ファイルを変更しました。</p>"; $str=@file_get_contents(FNAME_INI); $str=rtrim($str, "?>"); $is_str = strpos($str, 'VIEW_CACHE'); if ($is_str === false){ $str.="define( 'VIEW_CACHE', TRUE );\r\n"; $str.="define( 'API_UPDATE_INTERVAL_SEC', 3600 );\r\n"; file_put_contents(FNAME_INI,$str); echo "<p>設定ファイルを変更しました。</p>"; } } } if ( $now_ver < '2.30' ) { echo "<p>2.20 → 2.30の変更処理<br>"; $sql = "CREATE TABLE IF NOT EXISTS `stories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL DEFAULT '1',
  `step_mail_id` int(11) DEFAULT NULL,
  `story_no` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  KEY `step_mail_id` (`step_mail_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8"; $Obj->db_sql( $sql ); echo "テーブルを作成しました。 `stories`<br>"; $sql = "ALTER TABLE `extra_mails` ADD `group_id` VARCHAR( 1000 ) NULL AFTER `footer_id`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。`extra_mails`<br>"; $sql = "ALTER TABLE `groups` ADD `del_flg` INT NOT NULL DEFAULT '0' AFTER `group_name`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。`groups`<br>"; $sql = "UPDATE `groups` SET `group_name`='共通' WHERE `id`=1 LIMIT 1"; $Obj->db_sql( $sql ); echo "テーブルのデータを更新しました。`groups`<br>"; $sql = "ALTER TABLE `settings` ADD `group_id` INT NULL DEFAULT NULL AFTER `id`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。`settings`<br>"; $sql = "ALTER TABLE `settings` ADD UNIQUE (`group_id`)"; $Obj->db_sql( $sql ); echo "テーブルのデータを更新しました。`settings`<br>"; $sql = "UPDATE `settings` SET `group_id`='1' WHERE `id`=1"; $Obj->db_sql( $sql ); echo "テーブルのデータを更新しました。`settings`<br>"; $sql = "UPDATE `tp_contents` SET `group_id`='1' WHERE `group_id` IS NULL OR `group_id`=''"; $Obj->db_sql( $sql ); echo "テーブルのデータを更新しました。`tp_contents`<br>"; $sql = "UPDATE `extra_mails` SET `group_id`='1' WHERE `group_id` IS NULL OR `group_id`=''"; $Obj->db_sql( $sql ); echo "テーブルのデータを更新しました。`extra_mails`<br>"; $sql = "UPDATE `step_mails` SET `group_id`='1' WHERE `group_id` IS NULL OR `group_id`=''"; $Obj->db_sql( $sql ); echo "テーブルのデータを更新しました。`step_mails`<br>"; $sql = "ALTER TABLE `settings` ADD `send_stepmail` INT NOT NULL DEFAULT '1' AFTER `send_now`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。`settings`<br>"; $sql = "ALTER TABLE `settings` ADD `send_extramail` INT NOT NULL DEFAULT '1' AFTER `send_stepmail`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。`settings`<br>"; $sql = "TRUNCATE TABLE `stories`;"; $Obj->db_sql( $sql ); echo "テーブルのデータを削除しました。 `stories`<br>"; require_once('../common/stories.php'); $storiesObj = new stories(); $storiesObj->get_all_stepmail(); echo "テーブルのデータを追加しました。 `stories`<br>"; $sql = "ALTER TABLE `users` CHANGE `group_id` `group_id` VARCHAR(1000) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '1'"; $Obj->db_sql( $sql ); echo "テーブルを修正しました。 `users`<br>"; $sql = "UPDATE `users` SET `group_id`='1' WHERE `auth`!=9 AND (`group_id` IS NULL OR `group_id`='')"; $Obj->db_sql( $sql ); echo "テーブルのデータを修正しました。 `users`</p>"; $str=@file_get_contents(FNAME_INI); $str=rtrim($str, "?>"); $is_str = strpos($str, 'RESULT_PER_PAGE'); if($is_str === false){ $str.="define( 'RESULT_PER_PAGE', 30 );\r\n"; file_put_contents(FNAME_INI,$str); echo "<p>設定ファイルを変更しました。</p>"; } } if ( $now_ver < '2.33' ) { echo "<p>2.30 → 2.33の変更処理<br>"; $str=@file_get_contents(FNAME_ORG_PHP_INI); file_put_contents(FNAME_PHP_INI_V, $str); file_put_contents(FNAME_PHP_INI_F, $str); file_put_contents(FNAME_PHP_INI_A, $str); echo "設定ファイルを変更しました。</p>"; } if ( $now_ver < '2.40' ) { echo "<p>2.33 → 2.40の変更処理<br>"; $sql = "CREATE TABLE IF NOT EXISTS `pm_contract` (
`id` int(11) NOT NULL AUTO_INCREMENT,
`product_id` varchar(16) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
`status` varchar(20) DEFAULT NULL,
`user_id` int(11) DEFAULT NULL,
`bank_txn_id` varchar(20) DEFAULT NULL,
`txn_id` varchar(20) DEFAULT NULL,
`txn_type` varchar(20) DEFAULT NULL,
`payment_type` varchar(20) DEFAULT NULL,
`order_time` datetime NOT NULL,
`amt` varchar(20) DEFAULT NULL,
`fee_amt` varchar(20) DEFAULT NULL,
`tax_amt` varchar(20) DEFAULT NULL,
`currency_code` varchar(20) DEFAULT NULL,
`pending_reason` varchar(20) DEFAULT NULL,
`reason_code` varchar(20) DEFAULT NULL,
`error_code` varchar(20) DEFAULT NULL,
`mail_transfer` varchar(30) DEFAULT NULL,
`mail_complete` varchar(30) DEFAULT NULL,
`mail_refund` varchar(30) DEFAULT NULL,
`created` datetime NOT NULL,
`updated` datetime DEFAULT NULL,
PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `pm_contract`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `pm_payment_bank` (
`bank_txn_id` varchar(20) NOT NULL,
`bank_buyer_name` varchar(40) DEFAULT NULL,
`bank_buyer_email` varchar(200) DEFAULT NULL,
`bank_buyer_transfer_date` DATETIME NULL,
`bank_account_name` varchar(40) DEFAULT NULL,
`bank_payment_amount` int(11) DEFAULT NULL,
`bank_payment_status` varchar(20) DEFAULT NULL,
`created` datetime DEFAULT NULL,
`updated` datetime DEFAULT NULL,
PRIMARY KEY (`bank_txn_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `pm_payment_bank`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `pm_payment_paypal` (
  `payer_id` varchar(20) DEFAULT NULL,
  `tax` int(11) DEFAULT  '0',
  `payment_date` datetime DEFAULT NULL,
  `payment_status` varchar(20) DEFAULT NULL,
  `first_name` varchar(100) DEFAULT NULL,
  `mc_fee` int(11) DEFAULT '0',
  `notify_version` varchar(10) DEFAULT NULL,
  `payer_status` varchar(20) DEFAULT NULL,
  `num_cart_items` int(11) DEFAULT '0',
  `payer_email` varchar(200) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `txn_id` varchar(20) NOT NULL,
  `payment_type` varchar(20) DEFAULT NULL,
  `last_name` varchar(100) DEFAULT NULL,
  `receiver_email` varchar(200) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `payment_fee` int(11) DEFAULT '0',
  `receiver_id` varchar(20) DEFAULT NULL,
  `txn_type` varchar(20) DEFAULT NULL,
  `mc_gross` int(11) DEFAULT '0',
  `mc_currency` varchar(10) DEFAULT NULL,
  `test_ipn` int(1) DEFAULT NULL,
  `transaction_subject` varchar(200) DEFAULT NULL,
  `payment_gross` int(11) DEFAULT '0',
  `ipn_track_id` varchar(20) DEFAULT NULL,
  `log` text,
  `created` datetime DEFAULT NULL,
  `updated` datetime DEFAULT NULL,
PRIMARY KEY (`txn_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `pm_payment_paypal`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `pm_product` (
  `id` varchar(16) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `unit_id` varchar(16) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `title` varchar(100) NOT NULL,
  `description` varchar(500) NOT NULL,
  `price` int(11) NOT NULL DEFAULT '0',
  `bank_flag` int(11) NOT NULL DEFAULT '0',
  `bank_tr_deadline` smallint(6) DEFAULT '7',
  `bank_app_mail_title` varchar(100) DEFAULT NULL,
  `bank_app_mail_body` varchar(6000) DEFAULT NULL,
  `sales_option` tinyint(4) NOT NULL DEFAULT '0',
  `image_flag` int(11) DEFAULT '0',
  `group_info` varchar(100) DEFAULT NULL,
  `mail_title` varchar(100) DEFAULT NULL,
  `mail_body` varchar(6000) DEFAULT NULL,
  `after_url` varchar(1000) DEFAULT NULL,
  `register_url` varchar(1000) DEFAULT NULL,
  `version` int(11) NOT NULL,
  `created` datetime NOT NULL,
  `updated` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `pm_product_IX1` (`id`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `pm_product`<br>"; $sql = "CREATE TABLE IF NOT EXISTS `pm_seller_setting` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `bank_req_title` varchar(100) DEFAULT NULL,
  `bank_req_body` varchar(6000) DEFAULT NULL,
  `sender_name` varchar(200) DEFAULT NULL,
  `sender_email` varchar(200) DEFAULT NULL,
  `mail_title` varchar(100) NOT NULL,
  `mail_body` varchar(6000) NOT NULL,
  `payback_mail_title` varchar(100) NOT NULL,
  `payback_mail_body` varchar(6000) NOT NULL,
  `bank_name` varchar(40) NOT NULL,
  `bank_branch_name` varchar(40) NOT NULL,
  `bank_type` int(11) DEFAULT '0',
  `bank_account_number` varchar(40) NOT NULL,
  `bank_account` varchar(40) NOT NULL,
  `api_username` varchar(200) DEFAULT NULL,
  `api_password` varchar(20) DEFAULT NULL,
  `api_signature` varchar(80) DEFAULT NULL,
  `api_sandbox_mode` tinyint(1) DEFAULT '1',
  `api_sand_username` varchar(200) DEFAULT NULL,
  `api_sand_password` varchar(20) DEFAULT NULL,
  `api_sand_signature` varchar(80) DEFAULT NULL,
  `created` datetime NOT NULL,
  `updated` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;"; $Obj->db_sql( $sql ); echo "テーブルを作成しました `pm_seller_setting`<br>"; $sql = "INSERT INTO `pm_seller_setting` (`id`, `bank_req_title`, `bank_req_body`, `sender_name`, `sender_email`, `mail_title`, `mail_body`, `payback_mail_title`, `payback_mail_body`, `bank_name`, `bank_branch_name`, `bank_type`, `bank_account_number`, `bank_account`, `api_username`, `api_password`, `api_signature`, `api_sandbox_mode`, `api_sand_username`, `api_sand_password`, `api_sand_signature`, `created`, `updated`) VALUES
(1, '「%title%」銀行振込お申込みの確認', '%bank_account_name%様\r\n\r\n\r\nこのたびは、「%title%」をお申し込み頂き、\r\n誠にありがとうございます。\r\n\r\nこのメールには\r\nお申し込み内容とお振込先口座番号が明記されておりますので、\r\n大切に保管していただきますようお願いいたします。\r\n\r\n\r\n-------------------------------------------\r\n　お振込先口座番号\r\n-------------------------------------------\r\n\r\n【振込先口座】\r\n%bank_seller_account%\r\n振り込み金額：%price% 円\r\n\r\n\r\nお振込予定日：%bank_buyer_transfer_date%\r\n（お振込み期限は %deadline_date% となっておりますのでご注意ください）\r\n\r\n\r\n備考：\r\n・お振り込み手数料はご負担くださいますようお願い申し上げます。\r\n・銀行からのお振込み控えをもって領収書にかえさせていただきます。\r\n\r\n\r\nご入金が確認できましたら弊社からその旨メールにてお知らせいたします。\r\n\r\n\r\n\r\n-------------------------------------------\r\n　商品情報\r\n-------------------------------------------\r\n\r\n注文ID：%bank_txn_id%\r\n商品名：%title%\r\n価　格：%price% 円\r\n注文日：%order_time%', '', '', '「%title%」決済完了のお知らせ', '%x_account%様\r\n\r\nこのたびは、「%title%」をお申し込み頂き、\r\n誠にありがとうございます。\r\n\r\n決済の確認ができました。\r\n\r\n\r\n引き続きこちらのページよりご登録をお願い致します。\r\n\r\n%item_url%\r\n\r\n\r\n■お申込み内容確認\r\n\r\n-------------------------------------------\r\n　商品情報\r\n-------------------------------------------\r\n\r\n注文ID：%x_txn_id%\r\n商品名：%title%\r\n価　格：%price% 円\r\n注文日：%order_time%', '「%title%」返金のお知らせ', '%x_account%様\r\n\r\n「%title%」の返金手続きを行いましたので、\r\nお知らせいたします。\r\n\r\n\r\n-------------------------------------------\r\n　商品情報\r\n-------------------------------------------\r\n\r\n注文ID：%bank_txn_id%\r\n商品名：%title%\r\n価　格：%price% 円\r\n注文日：%order_time%\r\n\r\n\r\n\r\nクレジット決済にてお申し込み頂いた方へ\r\n　Paypalを通じて、ご登録のクレジットカードに返金となります。\r\n　その場合、いったん決済された後に、遅れて返金される流れとなるかと思います。\r\n　（お使いのカードによっては決済日から１、２ヵ月後となる場合がございます）\r\n\r\n銀行振込にてお申し込み頂いた方へ\r\n　確認させて頂きました銀行口座へ返金させて頂いておりますのでご確認ください。', '', '', 0, '', '', '', '', '', 1, '', '', '', '2014-12-22 00:00:00', '2014-12-22 00:00:00');"; $Obj->db_sql( $sql ); echo "テーブルにデータを設定しました `pm_seller_setting`</p>"; $str=file_get_contents(FNAME_INI); $str=rtrim($str, "?>"); $is_str = strpos($str, 'PAYPAL_LIVE_URL'); if ($is_str === false) { $str.="define('PAYPAL_LIVE_URL','https://www.paypal.com/cgi-bin/webscr');\r\ndefine('PAYPAL_SAND_URL','https://www.sandbox.paypal.com/cgi-bin/webscr');\r\n"; file_put_contents(FNAME_INI,$str); echo "<p>設定ファイルを変更しました。</p>"; } } if ( $now_ver < '3.00' ) { echo "<p>2.40 → 3.00の変更処理<br>"; require_once('../common/builders.php'); $buildersObj = new builders(); $sql = "ALTER TABLE  `tp_contents` ADD  `position_c` INT NOT NULL AFTER  `title`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `tp_contents`<br>"; $sql = "ALTER TABLE  `tp_side_titles` ADD  `position_m` INT NOT NULL AFTER  `title`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `tp_side_titles`<br>"; $sql = "ALTER TABLE `tp_side_titles` ADD `toggle_flg` INT NOT NULL DEFAULT '1' AFTER `position_m`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `tp_side_titles`<br>"; $cap_id=$buildersObj->get_side_title_id_tp_side_titles("no caption"); if($cap_id==0){ $sql = "INSERT INTO `tp_side_titles` (`id`, `title`, `position_m`, `toggle_flg`, `public`, `created`, `modified`) VALUES
(NULL, 'no caption', '', '1', NULL, NOW(), NULL);"; $Obj->db_sql( $sql ); echo "テーブルにデータを設定しました。 `tp_side_titles`<br>"; } $sql = "INSERT INTO `tp_side_freeareas` (`id`, `contents`, `created`, `modified`) VALUES
(3, 'メニュー', NOW(), NULL),
(4, 'その他', NOW(), NULL)"; $Obj->db_sql( $sql ); echo "テーブルにデータを設定しました。 `tp_side_freeareas`<br>"; $sql = "ALTER TABLE `groups` ADD `group_code` VARCHAR(10) NOT NULL AFTER `group_name`"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `groups`</p>"; $str=file_get_contents(FNAME_INI); $str=rtrim($str, "?>"); $is_str = strpos($str, 'URLGROUP'); if ($is_str === false) { $str.="define('URLGROUP',  URL . '/changegroup/');\r\ndefine('FNAME_GROUP','group.php');\r\ndefine('FNAME_GROUP_IFRAME','group_iframe.php');\r\ndefine('URLGIF',  URLGROUP . '?mode=if');\r\n"; file_put_contents(FNAME_INI,$str); echo "<p>設定ファイルを変更しました。</p>"; } $is_str = strpos($str, 'NOCAPTION'); if ($is_str === false) { $str.="define('NOCAPTION', '(見出しなし)');\r\n"; file_put_contents(FNAME_INI,$str); echo "<p>設定ファイルを変更しました。</p>"; } $ret=$buildersObj->remake_tp_sidebar($form_data); if($ret=="complete"){ echo '<p><b>サイドバーのアップデートに成功しました。</b></p>'; }else{ echo '<p><b>サイドバーのアップデートに失敗しました。</b></p>'; echo '<p>ログインしてコンテンツとサイドバーを確認してくさい。<br>'; echo '<span class="red">不具合があった場合には一度コンテンツをすべて削除</span>してから再度登録してください。</p>'; echo '<p>&nbsp;</p>'; } } if ( $now_ver < '3.01' ) { echo "<p>3.00 → 3.01の変更処理<br>"; $sql = "ALTER TABLE `extra_mails` ADD `send_done` DATETIME NULL DEFAULT NULL AFTER `send_time`;"; $Obj->db_sql( $sql ); echo "テーブルにカラムを追加しました。 `extra_mails`</p>"; $str=file_get_contents(FNAME_INI); $str=rtrim($str, "?>"); $is_str = strpos($str, 'DEBUG'); if ($is_str === false) { $str.="define('DEBUG', 0);\r\n"; file_put_contents(FNAME_INI,$str); echo "<p>設定ファイルを変更しました。(デバッグモード)</p>"; } $is_str = strpos($str, 'CURL_TIME_OUT'); if ($is_str === false) { $str.="define('CURL_TIME_OUT', 10);\r\ndefine('LOG_TIME_S', 2);\r\ndefine('LOG_TIME_E', 3);\r\ndefine('LOG_MAX_REC', 180000);\r\ndefine('LOG_DEL_CNT', 10000);\r\n"; file_put_contents(FNAME_INI,$str); echo "<p>設定ファイルを変更しました。(履歴ログ管理)</p>"; } } if ( $now_ver < '3.08' ) { echo "<p>3.07 → 3.08の変更処理</p>"; $htaccess=@file_get_contents('../.htaccess'); $is_str = strpos($htaccess, '# BEGIN Cyfons'); $cyfons =""; $cyfons.="# BEGIN Cyfons\n"; $cyfons.='RewriteEngine on'; $cyfons.="\n"; $cyfons.='RewriteRule cf/(.*) '.URL.'/su_cf.php?code=$1 [R,L]'; $cyfons.="\n"; $cyfons.="SetEnv TZ JST-9"; $cyfons.="\n"; $cyfons.="# END Cyfons\n"; if($is_str === false || $htaccess === false) { (!empty($htaccess))?$str="\n":$str=''; $str.=$cyfons; file_put_contents('../.htaccess', $str, FILE_APPEND); echo "<p>設定ファイルを作成しました。[01]</p>"; } if(is_numeric($is_str) & $htaccess !== false) { $str =preg_replace( "/(# BEGIN Cyfons)(.*)(# END Cyfons)\n?/s", '', $htaccess ); $str =preg_replace( "/$\n/", '', $str ); (!empty($str))?$str.="\n":$str=''; $str.=$cyfons; file_put_contents('../.htaccess', $str); echo "<p>設定ファイルを修正しました。[02]</p>"; } } if ( $now_ver < '3.10' ) { echo "<p>3.01 → 3.10の変更処理<br>"; if ($Obj->is_unit_folder()) { define('FNAME_UNIT_SH','../admin/mails/send_mail.sh'); $name_sh = FNAME_UNIT_SH; $is_setup = $Obj->is_users_unit(); $is_sh = file_exists($name_sh); if ($is_setup || $is_sh) { echo '<b>ユニットメールがセットアップされています。</b><br>'; } else { echo '<b>ユニットメールがセットアップされていません。</b><br>'; $Obj->unlink_unit_folder(); echo '<span style="color:red">不要なフォルダを削除しました。[unit]</span><br>'; } } $sql = "ALTER TABLE `tp_inquirys` ADD `formtitle` VARCHAR(200) NOT NULL AFTER `info`;"; $Obj->db_sql( $sql ); echo "テーブルを追加しました。 `tp_inquirys`<br>"; $sql = "UPDATE `tp_inquirys` SET `formtitle`='お問い合わせ' WHERE `id`=1;"; $Obj->db_sql( $sql ); echo "テーブルにデータを追加しました。 `tp_inquirys`</p>"; } if ( $now_ver < '3.14' ) { echo "<p>3.10 → 3.14の変更処理</p>"; $htaccess=@file_get_contents('../.htaccess'); $is_str = strpos($htaccess, '# BEGIN Cyfons'); $cyfons =""; $cyfons.="# BEGIN Cyfons\n"; $cyfons.='RewriteEngine on'; $cyfons.="\n"; $cyfons.='RewriteRule cf/(.*) '.URL.'/su_cf.php?code=$1 [R,L]'; $cyfons.="\n"; $cyfons.='RewriteRule pg/(.*) '.URL.'/page.php?url=$1 [R,L]'; $cyfons.="\n"; $cyfons.="SetEnv TZ JST-9"; $cyfons.="\n"; $cyfons.="# END Cyfons\n"; if($is_str === false || $htaccess === false) { (!empty($htaccess))?$str="\n":$str=''; $str.=$cyfons; file_put_contents('../.htaccess', $str, FILE_APPEND); echo "<p>設定ファイルを作成しました。[01]</p>"; } if(is_numeric($is_str) & $htaccess !== false) { $str =preg_replace( "/(# BEGIN Cyfons)(.*)(# END Cyfons)\n?/s", '', $htaccess ); $str =preg_replace( "/$\n/", '', $str ); (!empty($str))?$str.="\n":$str=''; $str.=$cyfons; file_put_contents('../.htaccess', $str); echo "<p>設定ファイルを修正しました。[02]</p>"; } $sql = "ALTER TABLE `tp_settings` CHANGE `head` `head` TEXT CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL;"; $Obj->db_sql( $sql ); echo "<p>テーブルを修正しました。 `tp_settings`<p>"; $sql = "ALTER TABLE `tp_settings` ADD `head_script_add` TEXT NULL AFTER `head`;"; $Obj->db_sql( $sql ); echo "<p>テーブルを追加しました。 `tp_settings`<p>"; $sql = "ALTER TABLE `tp_settings` ADD `body_script_add` TEXT NULL AFTER `head_script_add`;"; $Obj->db_sql( $sql ); echo "<p>テーブルを追加しました。 `tp_settings`<p>"; } if ( $now_ver < '3.1502' ) { echo "<p>3.14 → 3.1502の変更処理</p>"; $sql = "ALTER TABLE `settings` ADD `admin_id` VARCHAR( 200 ) NULL AFTER `group_id`;"; $Obj->db_sql( $sql ); echo "<p>テーブルを追加しました。 `settings`<p>"; $sql = "INSERT INTO `tp_side_freeareas` (`id`, `contents`, `created`, `modified`) VALUES (5, '', NOW(), NULL);"; $Obj->db_sql( $sql ); echo "テーブルにデータを設定しました。 `tp_side_freeareas`<br>"; } if ( $now_ver < '3.1507' ) { echo "<p>3.1502 → 3.1507の変更処理</p>"; $sql = "ALTER TABLE  `tp_settings` ADD  `disp_contact` TINYINT( 1 ) NOT NULL DEFAULT  '1' AFTER  `is_edit` , ADD  `disp_member` TINYINT( 1 ) NOT NULL DEFAULT  '1' AFTER  `disp_contact` , ADD  `disp_logout` TINYINT( 1 ) NOT NULL DEFAULT  '1' AFTER  `disp_member`;"; $Obj->db_sql( $sql ); echo "<p>テーブルを追加しました。 `tp_settings`<p>"; } if ( $now_ver < '3.1906' ) { echo "<p>3.1507 → 3.1906の変更処理</p>"; $sql = "ALTER TABLE `tp_inquirys` ADD `dtstart` DATETIME NULL DEFAULT NULL AFTER `formtitle`, ADD `dtend` DATETIME NULL DEFAULT NULL AFTER `dtstart`;"; $Obj->db_sql( $sql ); echo "<p>テーブルを追加しました。 `tp_inquirys`<p>"; } echo '<p><b>アップデートが完了しました。</b></p>'; echo '<p style="color:green">現在のバージョンは'.$version.'です。</p>'; echo '<p>ログインして管理者情報を入力して下さい</p>'; echo '<p>━━━━━━━━━━━━━━━━━━━━<br>'; echo '<b>初期設定値(新規インストール時)</b><br>'; echo 'ID：admin@admin.admin<br>'; echo 'PW：123456<br>'; echo '━━━━━━━━━━━━━━━━━━━━</p>'; echo '<p class="small" style="color:red;">※バージョンアップ時は設定済のIDでログインしてください。</p>'; echo '<a href="./" class="btn btn-primary">管理画面からログイン</a>'; 