<?php
 session_start(); require_once(dirname(__FILE__).'/../../common/config.ini'); require_once(dirname(__FILE__).'/../../common/users.php'); require_once(dirname(__FILE__).'/../../common/groups.php'); require_once(dirname(__FILE__).'/../../common/stories.php'); require_once( dirname(__FILE__).'/../../common/payment_lib.php' ); $usersObj = new users(); $groupsObj = new groups(); if( $usersObj->get_auth_session( $_SESSION, $user )) { if( $usersObj->db_login( $user['email'], $user['password'], $auth=ADMIN_ROLL, $user )) { session_regenerate_id( TRUE ); } else { $usersObj->session_dell(); } } else { header( 'Location:'.URL.'/admin/' ); } if( $_SERVER['REQUEST_METHOD'] == 'POST' || $_SERVER['REQUEST_METHOD'] == 'GET' ) { $groupsObj->get_data( $_REQUEST, $form_data ); (!isset( $form_data['status']) ) ? $form_data['status'] = '':NULL; (!isset( $form_data['group_name']) ) ? $form_data['group_name'] = '':NULL; } switch ($form_data['status']) { case 'add': if($_SERVER["REQUEST_METHOD"] == "POST") { $groupsObj->check_input_group_name( $form_data ); $err = $groupsObj->get_err(); if( empty( $err )) { $form_data['group_code'] = $groupsObj->make_group_code(); if( $form_data['group_code'] ) { $groupsObj->db_add_group( $form_data ); } else{ $err['code'] = 'グループコードが正しく設定されませんでした。もう一度グループ追加をしてください。'; $groupsObj->get_all_group( $groups_data ); $paymentObj = new payment_lib(); require_once( 'add.php' ); break; } $form_data['group_id'] = $groupsObj->get_last_id(); if( !$groupsObj->is_settings_group(1) ) { require_once(dirname(__FILE__).'/../../common/settings.php'); $settingsObj = new settings(); $settingsObj->db_all_delete_setting(); $settingsObj->db_set_setting(); } $groupsObj->db_add_setting( $form_data ); $groupsObj->get_stepmail_id_group( 1, $arr_stepmail_id ); if( !empty($arr_stepmail_id) ) { $storiesObj = new stories(); foreach( $arr_stepmail_id as $stepmail_id ) { $storiesObj->add_story( $form_data['group_id'], $stepmail_id['id'] ); $storiesObj->make_storyno( $form_data['group_id'] ); } } } else { $groupsObj->get_all_group( $groups_data ); $paymentObj = new payment_lib(); require_once( 'add.php' ); break; } } header( 'Location:'.URL.'/admin/groups/' ); break; case 'edit': $groupsObj->get_group( $form_data['id'], $groups_data ); require_once( 'edit.php' ); break; case 'edit_done': if($_SERVER["REQUEST_METHOD"] == "POST") { $groupsObj->check_input_group_name( $form_data ); $err = $groupsObj->get_err(); if( empty( $err )) { $groupsObj->db_edit_group( $form_data ); } else { $groupsObj->get_group( $form_data['id'], $groups_data ); require_once( 'edit.php' ); break; } } header( 'Location:'.URL.'/admin/groups/' ); break; case 'delete': if($_SERVER["REQUEST_METHOD"] == "POST") { $storiesObj = new stories(); $group_id = $form_data['id']; $groupsObj->db_delete_group( $group_id ); if( $groupsObj->is_settings_group( $group_id )) { $groupsObj->db_delete_setting( $group_id ); } if( $storiesObj->is_stories_group( $group_id )) { $storiesObj->db_delete_story_group_id( $group_id ); } @$_SESSION['group_id'] = "all"; } header( 'Location:'.URL.'/admin/groups/' ); break; default: $groupsObj->get_all_group( $groups_data ); if( !$groupsObj->is_settings_group(1) ) { require_once(dirname(__FILE__).'/../../common/settings.php'); $settingsObj = new settings(); $settingsObj->db_all_delete_setting(); $settingsObj->db_set_setting(); $err[] = '設定情報にエラーが見つかりましたので、設定情報を再構築しました。また、すでにグループがある場合にはグループをすべて削除して、再度グループを設定してください。'; } else { $cnt_group = count($groups_data); $cnt_setting = $groupsObj->db_cnt_settings(); if ($cnt_group != $cnt_setting) { if ($cnt_group == 1){ $groupsObj->db_delete_setting_notid( 1 ); $err[] = '[[err1]]共通グループ以外の不要な設定ファイルが見つかりましたので不要な設定を削除しました。'; } else { $groupsObj->db_all_delete_groups(); $groupsObj->db_change_datetime_2_null(); $groupsObj->set_groups(); $err[] = '[[err2]]設定情報にエラーが見つかりました。すべてのグループを削除してグループ情報を再設定しました。'; } } } $storiesObj = new stories(); $storiesObj->check_stories_nogroup(); $form_data['status'] = 'default'; $paymentObj = new payment_lib(); require_once( 'add.php' ); break; } ?>