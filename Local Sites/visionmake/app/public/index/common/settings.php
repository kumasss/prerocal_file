<?php
 require_once( dirname(__FILE__).'/main.php' ); class settings extends main { protected $err; function db_set_setting() { $user_password = $this->make_password(); $form_password = $this->make_password(); try { $sql = "INSERT INTO `settings` (`id`, `group_id`, `user_password`, `form_password`, `from_email`, `name_email`, `reply_email`, `send_err_num`, `send_err`, `send_stop`, `send_num`, `send_interval`, `send_now`, `send_stepmail`, `send_extramail`, `automail_add_admin`, `automail_stop_admin`, `automail_edit_admin`, `automail_add_user`, `automail_stop_user`, `automail_edit_user`, `form_email`, `form_email2`, `form_password2`, `form_firstname`, `form_lastname`, `form_order_no`, `form_is_email`, `form_is_firstname`, `form_is_lastname`, `form_is_order_no`, `form_is_password`, `form_is_password2`, `form_add_done_message`, `form_stop_done_message`, `created`, `modified`) VALUES
(NULL, 1, :user_password, :form_password, NULL, NULL, NULL, 3, 0, 0, 100, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, '&lt;p&gt;会員登録が完了しました。&lt;br&gt;\r\nこの度はお申し込みをありがとうございました。&lt;/p&gt;\r\n&lt;p&gt;今後退会される時は、配信されるメール内の配信解除用リンクをクリックするか&lt;br&gt;\r\n解除フォームからメールアドレスを送信すると退会することができます。&lt;/p&gt;\r\n', '&lt;p&gt;会員の解除が完了しました。&lt;br&gt;\r\nこれまでのお付き合いをありがとうございました。&lt;/p&gt;\r\n', NOW(), NULL);"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':user_password', $user_password ); $this->stmt->bindValue( ':form_password', $form_password ); $this->stmt->execute(); } catch( PDOException $e ){ die( $e->getMessage() ); } } function db_add_setting( $data ) { $now = $this->get_now_date(); try { $sql = "INSERT INTO `settings` (`setting`, `created`) VALUES (:setting, :created)"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':setting', $data['setting'] ); $this->stmt->bindValue( ':created', $now ); $this->stmt->execute(); } catch( PDOException $e ){ die( $e->getMessage() ); } } function db_make_setting( $form_data, $data ) { if( empty( $form_data['name_email'] )){ $form_data['name_email'] = $data['name_email']; } } function db_edit_setting( $data ) { try { $sql = "UPDATE `settings` 
					SET
					`send_err_num` = :send_err_num,
					`send_stop` = :send_stop,
					`send_num` = :send_num,
					`send_interval` = :send_interval,
					`send_now` = :send_now,
					`modified` = NOW()
					WHERE `id` = :id;"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':send_err_num', $data['send_err_num'], PDO::PARAM_INT ); $this->stmt->bindValue( ':send_stop', $data['send_stop'], PDO::PARAM_INT ); $this->stmt->bindValue( ':send_num', $data['send_num'], PDO::PARAM_INT ); $this->stmt->bindValue( ':send_interval', $data['send_interval'], PDO::PARAM_INT ); $this->stmt->bindValue( ':send_now', $data['send_now'], PDO::PARAM_INT ); $this->stmt->bindValue( ':id', $data['id'], PDO::PARAM_INT ); $this->stmt->execute(); } catch( PDOException $e ){ die( $e->getMessage() ); } } function db_delete_setting( $id ) { $now = $this->get_now_date(); try { $sql = "DELETE FROM `settings`
					WHERE `settings`.`id` = :id;"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':id', $id, PDO::PARAM_INT ); $this->stmt->execute(); } catch( PDOException $e ){ die( $e->getMessage() ); } } function db_all_delete_setting() { try { $sql = "TRUNCATE TABLE `settings`"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->execute(); } catch( PDOException $e ){ die( $e->getMessage() ); } } function db_reset_autoinc_setting() { try { $sql = "ALTER TABLE `settings` AUTO_INCREMENT = 1"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->execute(); } catch( PDOException $e ){ die( $e->getMessage() ); } } function get_settings( $group_id=1 ) { $result = FALSE; $this->db_get_settings( $group_id ); $row = $this->stmt->fetchAll(); $cnt = count( $row ); if( count($row) == 1 ) { $result = $row[0]; } return $result; } private function db_get_settings( $group_id ) { try { $this->stmt = $this->pdo->prepare( 'SELECT * FROM `settings` WHERE `group_id` =:group_id' ); $this->stmt->bindValue( ':group_id', (int)$group_id, PDO::PARAM_INT ); $this->stmt->execute(); } catch(PDOException $e){ die($e->getMessage()); } } function get_send_stepmail( $group=1 ) { $result = FALSE; try { $sql = "SELECT `send_stepmail` FROM `settings` WHERE `group_id` =:group"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':group', $group ); $this->stmt->execute(); } catch(PDOException $e){ die($e->getMessage()); } $row = $this->stmt->fetchAll(); $cnt = count( $row ); if($cnt == 1) { $data = $row; $result = $row[0]['send_stepmail']; } return $result; } function is_send_stepmail( $send, $group=1 ) { $result = FALSE; try { $sql = "UPDATE `settings` SET `send_stepmail` = :send WHERE `group_id` =:group;"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':send', $send ); $this->stmt->bindValue( ':group', $group ); $this->stmt->execute(); $this->stmt->fetchAll(); $result = TRUE; } catch(PDOException $e){ die($e->getMessage()); } return $result; } function get_send_extramail( $group=1 ) { $result = FALSE; try { $sql = "SELECT `send_extramail` FROM `settings` WHERE `group_id` =:group"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':group', $group ); $this->stmt->execute(); } catch(PDOException $e){ die($e->getMessage()); } $row = $this->stmt->fetchAll(); $cnt = count( $row ); if($cnt == 1) { $data = $row; $result = $row[0]['send_extramail']; } return $result; } function is_send_extramail( $send, $group=1 ) { $result = FALSE; try { $sql = "UPDATE `settings` SET `send_extramail` = :send WHERE `group_id` =:group;"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':send', $send ); $this->stmt->bindValue( ':group', $group ); $this->stmt->execute(); $this->stmt->fetchAll(); $result = TRUE; } catch(PDOException $e){ die($e->getMessage()); } return $result; } function get_send_now( $group=1 ) { $result = FALSE; try { $sql = "SELECT `send_now` FROM `settings` WHERE `group_id` =:group"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':group', $group ); $this->stmt->execute(); } catch(PDOException $e){ die($e->getMessage()); } $row = $this->stmt->fetchAll(); $cnt = count( $row ); if($cnt == 1) { $data = $row; $result = $row[0]['send_now']; } return $result; } function is_send_now( $send, $group=1 ) { $result = FALSE; try { $sql = "UPDATE `settings` SET `send_now` = :send WHERE `group_id` =:group;"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':send', $send ); $this->stmt->bindValue( ':group', $group ); $this->stmt->execute(); $this->stmt->fetchAll(); $result = TRUE; } catch(PDOException $e){ die($e->getMessage()); } return $result; } function get_setting( $id, &$data ) { $result = false; $this->db_setting( $id ); $row = $this->stmt->fetchAll(); $cnt = count( $row ); if($cnt == 1) { $data = $row[0]; $result = true; } return $result; } private function db_setting( $id ) { try { $sql = "SELECT * FROM `settings` WHERE `id` = :id"; $this->stmt = $this->pdo->prepare( $sql ); $this->stmt->bindValue( ':id', $id, PDO::PARAM_INT ); $this->stmt->execute(); } catch(PDOException $e){ die($e->getMessage()); } } function check_pw( $pw ) { if( !preg_match( "/^([a-zA-Z0-9])([a-zA-Z0-9!-\/:\[-`\{-\~]{5,31})$/", $pw ) ) { $this->err['password'] = 'パスワードは半角英数字及び記号6文字以上で入力してください。'; } } function check_word_count( $name, $num ) { if( mb_strlen($name,"UTF-8") < 2 || mb_strlen($name,"UTF-8") > $num ) { $this->err['firstname'] = '名前を正確に入力してください。'; } } function get_err() { return $this->err; } } ?>