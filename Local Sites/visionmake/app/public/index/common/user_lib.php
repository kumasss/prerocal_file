<?php
require_once( dirname(__FILE__).'/main.php' ); class user_lib extends main { protected static $_schema = array( 'id' => PDO::PARAM_INT ,'email' => PDO::PARAM_STR ,'password' => PDO::PARAM_STR ,'firstname' => PDO::PARAM_STR ,'lastname' => PDO::PARAM_STR ,'order_no' => PDO::PARAM_STR ,'auth' => PDO::PARAM_INT ,'delete_flg' => PDO::PARAM_INT ,'deleted' => PDO::PARAM_STR ); function findByCondition(&$columns,&$keywords,&$conditions,&$data) { $result = FALSE; try { $query = "SELECT * FROM users"; if ( !empty($columns)) { $query = sprintf("SELECT %s FROM users",implode(",",$columns)); } $stmt = NULL; $where = ""; if ( !empty($keywords)) { $where .= " WHERE "; $or = ""; foreach ($keywords as $col=>$val) { $where .= sprintf(" %s %s LIKE :%s",$or,$col,$col); $or = "OR"; } } if ( !empty($conditions)) { $and = ""; if ( $where == "") { $where .= " WHERE "; } else { $and = "AND"; } foreach ($conditions as $col=>$val) { $where .= sprintf(" %s %s=:%s",$and,$col,$col); $and = "AND"; } } if ( $where == "") { $stmt = $this->_pdo->query($query); } else { $stmt = $this->pdo->prepare( $query.$where ); foreach ($keywords as $col=>$val) { $stmt->bindValue(":${col}", $val, self::$_schema[$col]); } foreach ($conditions as $col=>$val) { $stmt->bindValue(":${col}", $val, self::$_schema[$col]); } } $stmt->execute(); $row = $stmt->fetchAll(PDO::FETCH_ASSOC); $cnt = count( $row ); if($cnt >= 1) { $data = $row; $result = TRUE; } } catch(PDOException $e) { die($e->getMessage()); } return $result; } function updateUserGroupId($userId,$groupId,$storyNo=0) { $stmt = $this->pdo->prepare('UPDATE users SET group_id=:group_id, story_no=:story_no WHERE id=:user_id'); $stmt->bindValue(":user_id", $userId, PDO::PARAM_INT); $stmt->bindValue(":story_no", $storyNo, PDO::PARAM_INT); $stmt->bindValue(":group_id", $groupId, PDO::PARAM_STR); $stmt->execute(); } function findGroupById($groupId) { $stmt = $this->pdo->prepare('SELECT id,group_name FROM groups WHERE id=:group_id AND del_flg = 0'); $stmt->bindValue(":group_id", $groupId, PDO::PARAM_STR); $stmt->execute(); return $stmt->fetchAll(PDO::FETCH_OBJ); } function findAllGroup() { $stmt = $this->pdo->query('SELECT id,group_name FROM groups WHERE del_flg = 0'); $stmt->execute(); return $stmt->fetchAll(PDO::FETCH_OBJ); } function findAdminMailAddr() { $stmt = $this->pdo->prepare('SELECT id,email,firstname,lastname FROM users WHERE auth = :auth LIMIT 1'); $stmt->bindValue(":auth", ADMIN_ROLL, PDO::PARAM_STR); $stmt->execute(); return $stmt->fetch(PDO::FETCH_OBJ); } }